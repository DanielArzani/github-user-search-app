import{Window}from"happy-dom";import{beforeEach,describe,expect,it,vi}from"vitest";import fs from"fs";import path from"path";import{UI}from"../utils/render";const htmlDocPath=path.join(process.cwd(),"index.html"),htmlDocumentContent=fs.readFileSync(htmlDocPath).toString(),window=new Window,document=window.document;let userInterface;vi.stubGlobal("document",document),beforeEach((()=>{document.body.innerHTML="",document.write(htmlDocumentContent)}));let elementsList={userName:new window.HTMLElement,userLink:new window.HTMLElement,dateJoined:new window.HTMLElement},userData={name:"Night",location:"Toronto",bio:"This profile has no bio"};beforeEach((()=>{userInterface=new UI(userData,elementsList)})),describe("class UI",(()=>{it("should be defined",(()=>{expect(userInterface).toBeDefined()})),it("should have properties and methods",(()=>{expect(userInterface).toHaveProperty("render"),expect(userInterface).toHaveProperty("data"),expect(userInterface).toHaveProperty("elementsList")})),it("should not have its private methods exposed",(()=>{expect(userInterface).not.toHaveProperty("updateTextContent")})),it("should throw an error when an argument that doesn't have the parentElement method is passed in",(()=>{const e=new UI(25,"a string");expect((()=>e.render())).toThrow()})),it("should throw an error if an htmlElement is passed in by itself and not as an objects property",(()=>{const e=new UI(new window.HTMLLinkElement,{name:"daniel"});expect((()=>e.render())).toThrow()}))}));
//# sourceMappingURL=render.test.js.map